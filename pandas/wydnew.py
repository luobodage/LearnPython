# -*- coding: utf-8 -*-
"""
Created on Thu Mar 19 15:49:05 2020
https://www.yiibai.com/pandas/python_pandas_io_tool.html
@author: 王亚东
"""

import numpy as np
import pandas as pd

#  系列
#定义 pd.Series(data,inxdex,dtype,copy)
# =============================================================================
# a = pd.Series()
# a = pd.Series([],dtype = np.float64)
# a = pd.Series(np.array([1,2,3,4,5]),index=['a','b','c','d','a'])
# print(a)
# print('-'*20)
# print(a['a'])
# 
# =============================================================================

# =============================================================================
# 
# a = pd.Series({'a':1,'b':100,'c':1000})
# print(a)
# print("-"*20)
# print(a['a'])
# =============================================================================

# =============================================================================
# a = pd.Series({1:1,2:100,3:1000},index=[2,3,4,5,1])
# print(a)
# print('-'*20)
# print(a[4])
# =============================================================================

# =============================================================================
# a =pd.Series(100,index = ['a','b','c'])
# print(a)
# 
# =============================================================================

# =============================================================================
# a = pd.Series([10,20,30,40],index = [3,5,7,8])
# print(a)
# print(a[3])
# 
# a = pd.Series([10,20,30,40],index = ['a','b','c','d'])
# print(a)
# print(a[0])
# print(a['a'])
# print(a[:2])
# print(a[-2:])
# print(a[-1::-1])
# =============================================================================




# 数据帧

# 定义

# =============================================================================
# a = [1,2,3,4,5,'a']
# a =(1,2,3,4,5,'a')
# a = np.array([1,2,3,4,5,'a'])
# print(a)
# b = pd.DataFrame(a)
# print(b)
# print('-'*20)
# print(b[0][4])
# =============================================================================

# =============================================================================
# a = {'name':['tom','jack','kate'],'age':[10,20,30]}
# print(a)
# b = pd.DataFrame(a)
# print(b)
# print('-'*20)
# b = pd.DataFrame(a,index = ['a','b','c'])
# print(b)
# print('-'*20)
# print(a['name'])
# print(b['name'])
# print(b['age']['a'])
# print(b['age'][1])
# 
# =============================================================================

# =============================================================================
# a = [{'a':1,'b':2},{'a':100,'c':200,'b':300,'d':4}]
# b = pd.DataFrame(a)
# print(b)
# print(b['a'][1])
# print(b['a'])
# =============================================================================

# =============================================================================
# a = pd.DataFrame({'a':[1,2,3],'b':[4,5,6]})
# print(a['a'])
# print(a['a'][0])
# a['c']= a['a']+a['b']
# print(a)
# =============================================================================

# =============================================================================
# a = pd.DataFrame( {'a':[1,2,3],'b':[4,5,6],'c':[7,8,9]})
# print(a)
# del a['a']
# print(a)
# a.pop('b')
# print(a)
# =============================================================================


# =============================================================================
# d = {'one' : pd.Series([1, 2, 3], index=['a', 'b', 'c']),
#      'two' : pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])}
# 
# df = pd.DataFrame(d)
# print(df)
# print(df.iloc[1])
# print(df['one'][0])
# print(df[2:4])
# print('-'*20)
# =============================================================================


# =============================================================================
# df = pd.DataFrame([[1, 2], [3, 4]], columns = ['a','b'])
# df2 = pd.DataFrame([[5, 6], [7, 8]], columns = ['a','b'])
# 
# df = df.append(df2)
# print(df)
# df = df.drop(0)
# print(df)
# =============================================================================

# =============================================================================
# series 属性
# a = pd.Series(np.random.randn(4),index = ['a','b','c','d'])
# print(a)
# print(a.axes) #返回行轴标签列表。
# print(a.values)
# print(a.empty)
# print(a.ndim)
# print(a.size)
# print(a.head(2))
# print(a.tail(2))
# =============================================================================

# =============================================================================
# 数据帧属性
# a = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Minsu','Jack']),
#    'Age':pd.Series([25,26,25,23,30,29,23]),
#    'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}
# 
# a = pd.DataFrame(a)
# print(a)
# print(a.axes)
# print('---')
# print(a.dtypes)
# print('---')
# print(a.ndim)
# print(a.empty)
# print(a.shape)
# print(a.size)
# print(a.T)
# print(a.T.axes)
# print(a.values)
# print(a.head(2))
# print(a.tail(2))
# =============================================================================

# =============================================================================
# 统计函数
# d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Minsu','Jack',
#    'Lee','David','Gasper','Betina','Andres']),
#    'Age':pd.Series([25,26,25,23,30,29,23,34,40,30,51,46]),
#    'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8,3.78,2.98,4.80,4.10,3.65])}
# 
# #Create a DataFrame
# df = pd.DataFrame(d)
# print (df)
# b = df.sum()
# print(df.sum())
# print(b['Age'])
# print(df.sum(axis = 1))
# print(df.sum(axis = 1)[3])
# print('-----------')
# print(df.mean())
# print(df.std())
# print(df.count())
# 
# print(df)
# print(df.sum())
# print(df.cumsum())
# print(df.cummax())
# 
# print(df)
# print(df.describe())
# print(df.describe()['Age'][2])
# =============================================================================

















# =============================================================================
# #标签排序
# df=pd.DataFrame(np.random.randint(1,10,(10,2)),columns=['col2','col1'])
# print (df)
# a = df.sort_index(axis=1)
# print(a)
# 
# =============================================================================

# =============================================================================
# #按值排序
# df=pd.DataFrame(np.random.randint(1,10,(10,2)),columns=['col2','col1'])
# print (df)
# a = df.sort_values(['col2','col1'])
# print(a)
# =============================================================================


# =============================================================================
# # string 函数
# s = pd.Series(['TOM', 'William Rick', ' John ', 'Alber@t', np.nan, '1234','SteveMinsu'])
# 
# print (s)
# print (s.str.lower())
# print (s.str.upper())
# print(s.str.len())
# print(s.str.strip())
# print(s.str.contains(' '))
# print(s.str.replace('o','--'))
# print(s*2)
# print(s.str.islower())
# print(s.str.isupper())
# print(s.str.isnumeric())
# b = s.str.isnumeric()
# =============================================================================

# =============================================================================
# #索引
# df = pd.DataFrame(np.random.randn(8, 4),index = ['a','b','c','d','e','f','g','h'], columns = ['A', 'B', 'C', 'D'])
# print(df)
# print(df.loc['b':'d',['A','C']])
# print(df.loc[['a','d','g'],['A','C']])
# print(df.loc['a','A']>0)
# =============================================================================


# =============================================================================
# df = pd.DataFrame(np.random.randn(8, 4),index = ['a','b','c','d','e','f','g','h'], columns = ['A', 'B', 'C', 'D'])
# print(df)
# print(df.iloc[1:3,:])
# print(df.iloc[[1,3,5],[0,2]])
# print(df.iloc[:,[1,3]])
# print(df[['A','C']])
# print(df.A)
# =============================================================================


# =============================================================================
# #统计函数  增长率
# s = pd.Series([1,2,3,4,5,4])
# print(s)
# print (s.pct_change())
# 
# a = pd.DataFrame(np.arange(10).reshape(5,-1))
# print(a)
# print(a.pct_change())
# =============================================================================

# =============================================================================
# # 协方差  相关性  https://blog.csdn.net/GoodShot/article/details/79940438
# a = pd.Series([1,2,3,4,5])
# b = a *2
# print(b)
# print(a.cov(b))
# print(b.cov(a))
# print(a.corr(b))
# b = b*(-1)
# print(b.cov(a))
# print(a.corr((b)))
# 
# a = pd.DataFrame(np.random.randint(-100,100,(5,4)))
# print(a)
# 
# print(a.cov())
# print(a.corr())
# 
# =============================================================================





# =============================================================================
a = pd.DataFrame({'banji':['one','one','one','two','two','two'],'name':['a','b','c','d','e','f'],'score':[100,90,80,10,4,90]})
print(a)
# =============================================================================
# =============================================================================
# a['place-average']= a.score.rank(method = 'average',ascending = False)
# a['place-min']= a.score.rank(method = 'min',ascending = False)
# a['place-max']= a.score.rank(method = 'max',ascending = False)
# a['place-first']= a.score.rank(method = 'first',ascending = False)
# a['place-dense']= a.score.rank(method = 'dense',ascending = False)
# =============================================================================
# =============================================================================
# print(a['score'].rank(method='dense',ascending = False)==2)
# b = a[a['banji']=='one']
# print(b)
# print('------------')
# a['dense']= a.score.rank(method = 'dense',ascending = False)
# print(a)
# print(a[a['dense']==2])
# =============================================================================

# =============================================================================
print('------------------')
print(a)
for x in a.banji.unique():
    c = a[a['banji']==x]
    print(c[c.score.rank(method = 'dense',ascending = False)==2]) 
# =============================================================================

